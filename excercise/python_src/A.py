import numpy

def f(x, m, M, l, g, D_x, D_theta):
    return numpy.array([[0, 1, 0, 0], [0, -4*D_x/(4*M + 3*m*numpy.sin(x[2, 0])**2 + m), -6*m*(3*D_theta*numpy.cos(x[2, 0])*x[3, 0] - 4*D_x*l*x[1, 0] - 3/2*g*l*m*numpy.sin(2*x[2, 0]) + 4*l**2*m*numpy.sin(x[2, 0])*x[3, 0]**2)*numpy.sin(x[2, 0])*numpy.cos(x[2, 0])/(l*(4*M + 3*m*numpy.sin(x[2, 0])**2 + m)**2) + (-3*D_theta*numpy.sin(x[2, 0])*x[3, 0] - 3*g*l*m*numpy.cos(2*x[2, 0]) + 4*l**2*m*numpy.cos(x[2, 0])*x[3, 0]**2)/(l*(4*M + 3*m*numpy.sin(x[2, 0])**2 + m)), (3*D_theta*numpy.cos(x[2, 0]) + 8*l**2*m*numpy.sin(x[2, 0])*x[3, 0])/(l*(4*M + 3*m*numpy.sin(x[2, 0])**2 + m))], [0, 0, 0, 1], [0, 3*D_x*numpy.cos(x[2, 0])/(l*(4*M + 3*m*numpy.sin(x[2, 0])**2 + m)), -18*(-D_theta*M*x[3, 0] - D_theta*m*x[3, 0] + D_x*l*m*numpy.cos(x[2, 0])*x[1, 0] + M*g*l*m*numpy.sin(x[2, 0]) + g*l*m**2*numpy.sin(x[2, 0]) - 1/2*l**2*m**2*numpy.sin(2*x[2, 0])*x[3, 0]**2)*numpy.sin(x[2, 0])*numpy.cos(x[2, 0])/(l**2*(4*M + 3*m*numpy.sin(x[2, 0])**2 + m)**2) + 3*(-D_x*l*m*numpy.sin(x[2, 0])*x[1, 0] + M*g*l*m*numpy.cos(x[2, 0]) + g*l*m**2*numpy.cos(x[2, 0]) - l**2*m**2*numpy.cos(2*x[2, 0])*x[3, 0]**2)/(l**2*m*(4*M + 3*m*numpy.sin(x[2, 0])**2 + m)), 3*(-D_theta*M - D_theta*m - l**2*m**2*numpy.sin(2*x[2, 0])*x[3, 0])/(l**2*m*(4*M + 3*m*numpy.sin(x[2, 0])**2 + m))]])